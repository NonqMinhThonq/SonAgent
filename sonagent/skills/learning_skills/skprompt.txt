


class {{skill_name}}Tool:
    @sk_function(
        description="{{skill_description}}",
        name="{{skill_name}}",
    )
    @sk_function_context_parameter(
        name="{{skill_description_1}}",
        description="The first number to add",
    )
    @sk_function_context_parameter(
        name="skill_description_2",
        description="The second number to add",
    )

[GOAL]
gen code with this template for add 2 number 

[OUTPUT]
class AddTool:
    @sk_function(
        description="Adds two numbers together",
        name="add",
    )
    @sk_function_context_parameter(
        name="The first number to add",
        description="The first number to add",
    )
    @sk_function_context_parameter(
        name="The second number to add",
        description="The second number to add",
    )
    def add(self, context: SKContext) -> str:
        return str(float(context["input"]) + float(context["number2"]))

[GOAL]
gen code with this template for subtract 2 number 
[OUTPUT]
